# spring.datasource.url=jdbc:mysql://perritos-cut.mysql.database.azure.com:3306/cut
spring.datasource.url=${SPRING_DATASOURCE_URL:${DB_URL}}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${DB_USERNAME}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${DB_PASSWORD}}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JWT y CORS
app.security.jwt.secret=${JWT_SECRET:changeit}
app.security.jwt.issuer=perritoscutapp
app.cors.allowed-origins=http://localhost:3000,http://192.168.100.2:3000,https://perritoscut-app-front.vercel.app

# JPA/Hibernate
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none

# Logs
logging.level.org.springframework.web=DEBUG

# Puerto y dirección de binding
server.port=8080
server.address=0.0.0.0

# Para que Spring Boot sepa que está detrás de proxy (rev proxy o balanceador)
server.forward-headers-strategy=framework
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto

# Thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Error handling y encoding
server.error.whitelabel.enabled=false
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# Flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true
management.health.mail.enabled=${MAIL_HEALTH_ENABLED:false}

# Frontend base URL para enlaces en emails
app.frontend.base-url=${APP_FRONTEND_BASE_URL:http://localhost:3000,http://192.168.100.2:3000}

# Email: bandera y remitente
app.mail.enabled=${APP_MAIL_ENABLED:true}
app.mail.from=${APP_MAIL_FROM:}

# Config SMTP (usar variables de entorno; sin secretos por defecto)
# Opción recomendada (Gmail): STARTTLS por 587
spring.mail.host=${SPRING_MAIL_HOST:smtp.gmail.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:${MAIL_USERNAME}}
spring.mail.password=${SPRING_MAIL_PASSWORD:${MAIL_PASSWORD}}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.ssl.enable=${SPRING_MAIL_SSL_ENABLE:false}
spring.mail.properties.mail.smtp.ssl.trust=${SPRING_MAIL_SSL_TRUST:smtp.gmail.com}
spring.mail.properties.mail.smtp.connectiontimeout=${SPRING_MAIL_CONN_TIMEOUT:5000}
spring.mail.properties.mail.smtp.timeout=${SPRING_MAIL_TIMEOUT:5000}
spring.mail.properties.mail.smtp.writetimeout=${SPRING_MAIL_WRITE_TIMEOUT:5000}

#  SSL implicito por 465, ajusta via env:
# SPRING_MAIL_PORT=465
# SPRING_MAIL_STARTTLS_ENABLE=false
# SPRING_MAIL_SSL_ENABLE=true

# Almacenamiento de imágenes: forzar Cloudinary
app.storage.provider=${APP_STORAGE_PROVIDER:cloudinary}

# Cloudinary credentials via env
#cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME:}
#cloudinary.api_key=${CLOUDINARY_API_KEY:}
#cloudinary.api_secret=${CLOUDINARY_API_SECRET:}
cloudinary.url =${CLOUDINARY_URL:cloudinary_url}
# Carpetas en Cloudinary
cloudinary.perros_folder=${CLOUDINARY_PERROS_FOLDER:perritos}
cloudinary.perfiles_folder=${CLOUDINARY_PERFILES_FOLDER:perfiles}
